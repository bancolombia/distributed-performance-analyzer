name: E2E
on:
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - separator: ","
            dataset: "/app/datasets/sample_comma.csv"
          - separator: ";"
            dataset: "/app/datasets/sample_semicolon.csv"
    fail-fast: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Start latency_simulator container
        run: |
          docker container rm -f latency_simulator || true
          docker run --rm -d --name latency_simulator -p 8080:8080 juandgiraldom/latency_simulator:1.0
          docker container ls -a
      
      - name: Create performance.exs file
        run: |
          echo "import Config
          config :perf_analyzer,
            url: url,
            request: %{
              method: method,
              headers: headers,
              body: fn item -> ~s/body/ end
            },
            execution: %{
              steps: steps,
              increment: increment,
              duration: duration,
              constant_load: constant_load,
              dataset: dataset,
              separator: separator
            },
            distributed: :none
          config :logger,
            level: :info
          " > .github/workflows/config/performance.exs
      
      - name: Set variables
        run: |
          url="http://localhost:8080/wait/100"
          method="POST"
          headers='[{"Content-Type", "application/json"}]'
          body='{
                  "data": {
                      "customer": {
                          "identification": {
                              "type": "#{item.type}",
                              "number": "#{item.number}"
                          }
                      },
                      "pagination": {
                          "size": #{Enum.random(1..10)},
                          "key": 1
                      }
                  }
              }'
          steps="1"
          increment="1"
          duration="10000"
          constant_load="false"
          dataset=${{ matrix.dataset }}
          separator=${{ matrix.separator }}
          file=".github/workflows/config/performance.exs"
          headers=$(tr -s '[:space:]' '  ' <<<$headers)
          body="$(tr -d '[:space:]' <<<${body})"
          sed -i 's;: url;: "'$url'";' $file
          sed -i 's;: method;: "'$method'";' $file
          sed -i "s;: headers;: $headers;" $file
          sed -i 's;/body/;/'$body'/;' $file
          sed -i 's;: steps;: '$steps';' $file
          sed -i 's;: increment;: '$increment';' $file
          sed -i 's;: duration;: '$duration';' $file
          sed -i 's;: constant_load;: '$constant_load';' $file
          sed -i 's;: dataset;: "'$dataset'";' $file
          sed -i 's/: separator/: "'$separator'"/' $file
      
      - name: Run distributed-performance-analyzer container
        run: |
          mkdir -p .github/workflows/config
          docker run --rm --network=host -v $(pwd)/.github/workflows/config:/app/config -v $(pwd)/datasets:/app/datasets juandgiraldom/distribuited-performance-analyzer:1.0
      
      - name: Move result.csv
        run: mv -f .github/workflows/config/result.csv .
      
      - name: Cleanup
        run: |
          rm -rf .github/workflows/config
          docker container rm -f latency_simulator

